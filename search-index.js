var searchIndex = {};
searchIndex["uritemplate"] = {"doc":"`rust-uritemplate` is a Rust implementation of RFC6570  - URI Template that can process URI Templates up to and including ones designated as Level 4 by the specification. It passes all of the tests in the uritemplate-test test suite.","items":[[3,"UriTemplate","uritemplate","The main struct that processes and builds URI Templates.",null,null],[4,"TemplateVar","","TemplateVar represents the value of a template variable, which can be a scalar (a simple string), a list of strings, or an associative array of strings.",null,null],[13,"Scalar","","A simple string such as `\"foo\"`",0,null],[13,"List","","A list of strings such as `[\"foo\", \"bar\"]`",0,null],[13,"AssociativeArray","","An associative array of strings, such as `[(\"key1\", \"value1\"), (\"key2\", \"value2\")]`",0,null],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"templatevar"}}],[11,"into_template_var","","",0,{"inputs":[{"name":"self"}],"output":{"name":"templatevar"}}],[8,"IntoTemplateVar","","IntoTemplateVar represents any type that can be converted into a TemplateVar for use as the value of a template variable, such as a `String`, `Vec<String>`, or `Vec<(String, String)>`. Default implementations are available for those three types, as well as the `&str` versions.",null,null],[10,"into_template_var","","",1,{"inputs":[{"name":"self"}],"output":{"name":"templatevar"}}],[11,"new","","Creates a new URI Template from the given template string.",2,{"inputs":[{"name":"str"}],"output":{"name":"uritemplate"}}],[11,"set","","Sets the value of a variable in the URI Template.",2,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i"}],"output":{"name":"uritemplate"}}],[11,"delete","","Deletes the value of a variable in the URI Template. Returns `true` if the variable existed and `false` otherwise.",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"delete_all","","Deletes the values of all variables currently set in the `URITemplate`.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"build","","Expands the template using the set variable values and returns the final String.",2,{"inputs":[{"name":"self"}],"output":{"name":"string"}}]],"paths":[[4,"TemplateVar"],[8,"IntoTemplateVar"],[3,"UriTemplate"]]};
initSearch(searchIndex);
